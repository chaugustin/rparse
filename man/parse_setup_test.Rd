% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/testing.R
\name{parse_setup_test}
\alias{parse_setup_test}
\title{Set up a testing environment with a separate Parse application}
\usage{
parse_setup_test(to_remove = NULL, master = FALSE, backup = TRUE,
  error = TRUE, message = TRUE)
}
\arguments{
\item{to_remove}{a list of class names of objects to be cleared from
the test environment}

\item{master}{whether to leave the master key set}

\item{backup}{whether to back environment variables up (be careful to
set this as FALSE if you are calling this a second time)}

\item{error}{whether to throw an error if the environment variables aren't
set}

\item{message}{whether to display an message if the environment variables aren't
set}
}
\description{
This changes Parse's application to a separate application that can be used
for testing, then deletes all objects that you request within it.
To use this, set up three system variables:
\code{PARSE_APPLICATION_ID_TEST}, \code{PARSE_API_KEY_TEST}, and
\code{PARSE_MASTER_KEY_TEST}. These should point somewhere besides your
production application. If requested, it will leave the test in the
master key state, and can back up the environment variables so that the
\code{\link{parse_restore_state}} function will return them.
}
\details{
\code{error} is set to TRUE by default to ensure you don't try to set up
a test environment, fail, and run tests on your production database.
If you set \code{error = TRUE}, be sure you put all your tests in an
if statement.
}
\examples{
\dontrun{
if (parse_setup_test(error = FALSE)) {
    # run some tests, then
    parse_restore_state()
}
}
}

